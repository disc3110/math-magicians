{"version":3,"sources":["logic/operate.js","logic/display.js","components/Calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","calcDisplay","obj","total","next","Calculator","props","state","calcObj","button","buttonName","this","includes","parseFloat","setState","console","log","className","type","onClick","handleEvaluation","id","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c299f8.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","const calcDisplay = (obj) => {\n  // eslint-disable-next-line no-unused-vars\n  const { total, next, operation } = obj;\n\n  if (operation) {\n    return `${total} ${operation} ${next || ' '}`;\n  }\n  return next;\n};\n\nexport default calcDisplay;\n","/* eslint-disable react/prefer-stateless-function */\nimport './Calculator.css';\nimport React from 'react';\nimport calculate from '../logic/calculate';\nimport calcDisplay from '../logic/display';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calcObj: {\n        total: null,\n        next: 0,\n        operation: null,\n      },\n    };\n  }\n\n  handleEvaluation(button) {\n    const { calcObj } = this.state;\n    const { total, next, operation } = calculate(calcObj, button);\n    this.setState({ calcObj: { total, next, operation } });\n  }\n\n  render() {\n    const { calcObj } = this.state;\n    console.log(calcObj);\n    return (\n      <div className=\"container\">\n        <div className=\"screen dg\">{ calcDisplay(calcObj) }</div>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation('AC')}>AC</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation('+/-')}>+/-</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation('%')}>%</button>\n        <button className=\"orange\" type=\"button\" onClick={() => this.handleEvaluation('รท')}>รท</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(7)}>7</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(8)}>8</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(9)}>9</button>\n        <button className=\"orange\" type=\"button\" onClick={() => this.handleEvaluation('x')}>x</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(4)}>4</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(5)}>5</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(6)}>6</button>\n        <button className=\"orange\" type=\"button\" onClick={() => this.handleEvaluation('-')}>-</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(1)}>1</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(2)}>2</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation(3)}>3</button>\n        <button className=\"orange\" type=\"button\" onClick={() => this.handleEvaluation('+')}>+</button>\n        <button className=\"lightgray\" type=\"button\" id=\"zero\" onClick={() => this.handleEvaluation(0)}>0</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => this.handleEvaluation('.')}>.</button>\n        <button className=\"orange\" type=\"button\" onClick={() => this.handleEvaluation('=')}>=</button>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return typeof item === 'number';\n}\n\n/**\n  * Given a button name and a calculator data object, return an updated\n  * calculator data object.\n  *\n  * Calculator data object contains:\n  *   total:s      the running total\n  *   next:String       the next number to be operated on with the total\n  *   operation:String  +, -, etc.\n  */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: 0,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName.toString() === '0' && obj.next.toString() === '0') {\n      return { next: 0, total: obj.total, operation: obj.operation };\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return (\n          { next: obj.next + buttonName.toString(), operation: obj.operation, total: obj.total }\n        );\n      }\n      return { next: buttonName, operation: obj.operation, total: obj.total };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName.toString(),\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.toString().includes('.')) {\n        return { total: obj.total, next: obj.next, operation: obj.operation };\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.next.toString().includes('.')) {\n        return { total: obj.total, next: obj.next, operation: obj.operation };\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: null,\n        next: operate(obj.total, obj.next, obj.operation),\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return { next: 0 };\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return { next: 0 };\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return { next: 0 };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport Calculator from './components/Calculator';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Calculator />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}