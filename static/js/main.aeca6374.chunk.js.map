{"version":3,"sources":["logic/operate.js","logic/display.js","components/Calculator.js","logic/calculate.js","components/Header.js","components/Home.js","components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","calcDisplay","obj","total","next","Calculator","useState","calcObj","setCalcObj","handleEvaluation","button","buttonName","includes","parseFloat","className","type","onClick","id","Header","path","text","map","link","to","Home","Quote","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeca6374.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","const calcDisplay = (obj) => {\n  // eslint-disable-next-line no-unused-vars\n  const { total, next, operation } = obj;\n\n  if (operation) {\n    return `${total} ${operation} ${next || ' '}`;\n  }\n  return next;\n};\n\nexport default calcDisplay;\n","import '../Style/Calculator.css';\nimport React, { useState } from 'react';\nimport calculate from '../logic/calculate';\nimport calcDisplay from '../logic/display';\n\nconst Calculator = () => {\n  const [calcObj, setCalcObj] = useState({\n    total: null,\n    next: 0,\n    operation: null,\n  });\n\n  const handleEvaluation = (button) => {\n    const { total, next, operation } = calculate(calcObj, button);\n    setCalcObj({ total, next, operation });\n  };\n\n  return (\n    <section className=\"calc-container\">\n      <div className=\"instructions\">\n        <h2>Lets do some math</h2>\n      </div>\n      <div className=\"calculator\">\n        <div className=\"screen dg\">{ calcDisplay(calcObj) }</div>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation('AC')}>AC</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation('+/-')}>+/-</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation('%')}>%</button>\n        <button className=\"orange\" type=\"button\" onClick={() => handleEvaluation('รท')}>รท</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(7)}>7</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(8)}>8</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(9)}>9</button>\n        <button className=\"orange\" type=\"button\" onClick={() => handleEvaluation('x')}>x</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(4)}>4</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(5)}>5</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(6)}>6</button>\n        <button className=\"orange\" type=\"button\" onClick={() => handleEvaluation('-')}>-</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(1)}>1</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(2)}>2</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation(3)}>3</button>\n        <button className=\"orange\" type=\"button\" onClick={() => handleEvaluation('+')}>+</button>\n        <button className=\"lightgray\" type=\"button\" id=\"zero\" onClick={() => handleEvaluation(0)}>0</button>\n        <button className=\"lightgray\" type=\"button\" onClick={() => handleEvaluation('.')}>.</button>\n        <button className=\"orange\" type=\"button\" onClick={() => handleEvaluation('=')}>=</button>\n      </div>\n    </section>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return typeof item === 'number';\n}\n\n/**\n  * Given a button name and a calculator data object, return an updated\n  * calculator data object.\n  *\n  * Calculator data object contains:\n  *   total:s      the running total\n  *   next:String       the next number to be operated on with the total\n  *   operation:String  +, -, etc.\n  */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: 0,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName.toString() === '0' && obj.next.toString() === '0') {\n      return { next: 0, total: obj.total, operation: obj.operation };\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return (\n          { next: obj.next + buttonName.toString(), operation: obj.operation, total: obj.total }\n        );\n      }\n      return { next: buttonName, operation: obj.operation, total: obj.total };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName.toString(),\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.toString().includes('.')) {\n        return { total: obj.total, next: obj.next, operation: obj.operation };\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.next.toString().includes('.')) {\n        return { total: obj.total, next: obj.next, operation: obj.operation };\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: null,\n        next: operate(obj.total, obj.next, obj.operation),\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return { next: 0 };\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return { next: 0 };\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return { next: 0 };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import '../Style/Header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/calculator',\n      text: 'Calculator',\n    },\n    {\n      id: 3,\n      path: '/quote',\n      text: 'Quote',\n    },\n  ];\n  return (\n    <header>\n      <h1> Math Magicians </h1>\n      <nav>\n        <ul>\n          {links.map((link) => <li key={link.id}><Link to={link.path}>{link.text}</Link></li>)}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import '../Style/Home.css';\n\nconst Home = () => (\n  <section className=\"home\">\n    <h2>Welcome to our page</h2>\n    <p>\n      {' '}\n      Lorem ipsum dolor sit amet consectetur adipiscing elit euismod\n      per praesent, libero natoque accumsan convallis suspendisse ultricies\n      quis nec sociosqu sapien, lobortis tristique aliquet mi tellus\n      cubilia luctus rutrum porttitor. Lacus porttitor massa erat nec\n      condimentum inceptos mi tortor accumsan ligula varius rutrum morbi,\n      fringilla curabitur mus imperdiet blandit dui senectus sapien ornare\n      hendrerit donec in.\n      {' '}\n    </p>\n\n    <p>\n      {' '}\n      Euismod dis imperdiet sollicitudin urna pretium fames semper platea\n      risus, sagittis venenatis ut mi at accumsan augue et, sapien penatibus\n      aliquam lacus sociosqu suspendisse praesent tempus. Viverra purus\n      dignissim morbi massa mauris maecenas inceptos, quam fermentum\n      penatibus metus sollicitudin turpis, ac cursus taciti nascetur natoque\n      varius. Pulvinar fusce nascetur sodales sociosqu tellus libero,\n      elementum taciti magna aliquam augue, varius accumsan lobortis quis\n      consequat.\n    </p>\n  </section>\n);\n\nexport default Home;\n","/* eslint-disable arrow-body-style */\nimport '../Style/Quote.css';\n\nconst Quote = () => {\n  return (\n    <section className=\"quote\">\n      <p>\n        Mathematics is not about numbers, equiations, computations,\n        or algorithms: it is about understanding. -William Paul Thurston\n      </p>\n    </section>\n  );\n};\n\nexport default Quote;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Calculator from './components/Calculator';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Quote from './components/Quote';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route path=\"/calculator\">\n            <Calculator />\n          </Route>\n          <Route path=\"/quote\">\n            <Quote />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style/index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}